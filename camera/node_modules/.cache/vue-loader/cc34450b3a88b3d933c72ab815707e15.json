{"remainingRequest":"C:\\ex11\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ex11\\src\\components\\post_page.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ex11\\src\\components\\post_page.vue","mtime":1638173624431},{"path":"C:\\ex11\\node_modules\\babel-loader\\lib\\index.js","mtime":1654499747895},{"path":"C:\\ex11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654499746565},{"path":"C:\\ex11\\node_modules\\vue-loader\\lib\\index.js","mtime":1654499750089}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEpTT04g7YyM7J2866GcIOu2gO2EsCDsnbTrr7jsp4Ag7KCV67O0IOqwgOyguOyYtAppbXBvcnQgb1BpY3R1cmVEYXRhIGZyb20gJ0AvZGF0YXNvdXJjZXMvcGljdHVyZS1kYXRhJwovLyDtjIzsnbTslrTrsqDsnbTsiqTsl5DshJwgREIg6rCd7LK0IOqwgOyguOyYtAppbXBvcnQgewogIG9QaWN0dXJlc2luREIKfSBmcm9tICdAL2RhdGFzb3VyY2VzL2ZpcmViYXNlJwpleHBvcnQgZGVmYXVsdCB7CiAgLy8g7YyM7J207Ja067Kg7J207Iqk7JmAIOyXsOqysOuQnCDrt7DtjIzsnbTslrQgb1BpY3R1cmVzIOqwneyytCDspIDruYQKICBmaXJlYmFzZTogewogICAgb1BpY3R1cmVzOiBvUGljdHVyZXNpbkRCCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb1BpY3R1cmVzOiBbXSwgLy8g7IKs7KeEIOuNsOydtO2EsCDsoIDsnqUg67OA7IiYCiAgICAgIC8vIOy0iOq4sOqwkuycvOuhnCBKU09OIO2MjOydvOydmCDsnbTrr7jsp4Ag67Cw7Je0IOyggOyepQogICAgICBhUGljdHVyZXM6IG9QaWN0dXJlRGF0YS5hUGljdHVyZXMsCiAgICAgIHNUaXRsZTogJycsCiAgICAgIHNJbmZvOiAnJywKICAgICAgc1BpY1VybDogJycKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyBKU09OIO2MjOydvOyXkOyEnCDsgqzsp4Qg7KCV67O066W8IOuenOuNpOycvOuhnCDsnb3slrTsmYDshJwg7IKs7KeE6rO8IO2PrOyKpO2KuOq4gCDspIDruYQKICAgIGxldCBuSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMikKICAgIGNvbnN0IGl0ZW1QaWMgPSB0aGlzLmFQaWN0dXJlc1tuSW5kZXhdCiAgICB0aGlzLnNUaXRsZSA9IGl0ZW1QaWMudGl0bGUKICAgIHRoaXMuc0luZm8gPSBpdGVtUGljLmluZm8KICAgIHRoaXMuc1BpY1VybCA9IGl0ZW1QaWMudXJsCiAgfSwKICBtZXRob2RzOiB7CiAgICBmblN1Ym1pdFBvc3QoKSB7CiAgICAgIC8vIERC7JeQIOyggOyepe2VmOqzoCDtmYjtmZTrqbTsnLzroZwg7J2064+ZCiAgICAgIG9QaWN0dXJlc2luREIucHVzaCh7CiAgICAgICAgJ3VybCc6IHRoaXMuc1BpY1VybCwKICAgICAgICAndGl0bGUnOiB0aGlzLnNUaXRsZSwKICAgICAgICAnaW5mbyc6IHRoaXMuc0luZm8KICAgICAgfSkudGhlbih0aGlzLiRyb3V0ZXIucHVzaCgnLycpKQogICAgfQogIH0KfQo="},{"version":3,"sources":["post_page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"post_page.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container>\r\n    <!-- 첫 번째 행에는 사진 표시 -->\r\n    <v-row mt-4>\r\n      <v-col offset=\"1\" cols=\"10\">\r\n        <v-card>\r\n          <v-img height=\"200px\" :src=\"this.sPicUrl\">\r\n          </v-img>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n    <!-- 두 번째 행에는 기본 제목을 표시하고 수정할 수 있도록 함 -->\r\n    <v-row mt-5>\r\n      <v-col offset=\"2\" cols=\"8\">\r\n        <!-- autofocus 어트리뷰트를 사용해서 기본 포커스 지정 -->\r\n        <v-text-field name=\"title\" label=\"사진 제목\" v-model=\"sTitle\" autofocus></v-text-field>\r\n      </v-col>\r\n    </v-row>\r\n    <!-- 세 번째 행에는 기본 내용을 표시하고 수정할 수 있도록 함 -->\r\n    <v-row>\r\n      <v-col offset=\"2\" cols=\"8\">\r\n        <!-- 3줄로 편집 제한 -->\r\n        <v-text-field name=\"info\" label=\"사진 설명\" v-model=\"sInfo\" multi-line rows=\"3\"></v-text-field>\r\n      </v-col>\r\n    </v-row>\r\n    <v-row>\r\n      <v-col cols=\"12\" class=\"text-center\">\r\n        <v-btn color=\"orange\" dark large @click=\"fnSubmitPost( )\">업로드</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  // JSON 파일로 부터 이미지 정보 가져옴\r\n  import oPictureData from '@/datasources/picture-data'\r\n  // 파이어베이스에서 DB 객체 가져옴\r\n  import {\r\n    oPicturesinDB\r\n  } from '@/datasources/firebase'\r\n  export default {\r\n    // 파이어베이스와 연결된 뷰파이어 oPictures 객체 준비\r\n    firebase: {\r\n      oPictures: oPicturesinDB\r\n    },\r\n    data() {\r\n      return {\r\n        oPictures: [], // 사진 데이터 저장 변수\r\n        // 초기값으로 JSON 파일의 이미지 배열 저장\r\n        aPictures: oPictureData.aPictures,\r\n        sTitle: '',\r\n        sInfo: '',\r\n        sPicUrl: ''\r\n      }\r\n    },\r\n    mounted() {\r\n      // JSON 파일에서 사진 정보를 랜덤으로 읽어와서 사진과 포스트글 준비\r\n      let nIndex = Math.floor(Math.random() * 12)\r\n      const itemPic = this.aPictures[nIndex]\r\n      this.sTitle = itemPic.title\r\n      this.sInfo = itemPic.info\r\n      this.sPicUrl = itemPic.url\r\n    },\r\n    methods: {\r\n      fnSubmitPost() {\r\n        // DB에 저장하고 홈화면으로 이동\r\n        oPicturesinDB.push({\r\n          'url': this.sPicUrl,\r\n          'title': this.sTitle,\r\n          'info': this.sInfo\r\n        }).then(this.$router.push('/'))\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}