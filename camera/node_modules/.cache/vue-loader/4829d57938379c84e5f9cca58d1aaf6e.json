{"remainingRequest":"C:\\ex11\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ex11\\src\\components\\camera_page.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ex11\\src\\components\\camera_page.vue","mtime":1638173624294},{"path":"C:\\ex11\\node_modules\\babel-loader\\lib\\index.js","mtime":1654499747895},{"path":"C:\\ex11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654499746565},{"path":"C:\\ex11\\node_modules\\vue-loader\\lib\\index.js","mtime":1654499750089}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIO2MjOydtOyWtOuyoOydtOyKpOyXkOyEnCBEQuyZgCDsiqTthqDrpqzsp4Ag6rCd7LK0IOqwgOyguOyYtAppbXBvcnQgewogIG9TdG9yYWdlLAogIG9QaWN0dXJlc2luREIKfSBmcm9tICdAL2RhdGFzb3VyY2VzL2ZpcmViYXNlJwpleHBvcnQgZGVmYXVsdCB7CiAgLy8g7YyM7J207Ja067Kg7J207Iqk7JmAIOyXsOqysOuQnCDrt7DtjIzsnbTslrQgb1BpY3R1cmVzIOqwneyytCDspIDruYQKICBmaXJlYmFzZTogewogICAgb1BpY3R1cmVzOiBvUGljdHVyZXNpbkRCCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb1BpY3R1cmVzOiBbXSwgLy8g7IKs7KeEIOuNsOydtO2EsCDsoIDsnqUg67OA7IiYCiAgICAgIG9WaWRlb1N0cmVhbTogbnVsbCwgLy8g7Lm066mU6528IOyYgeyDgSDsiqTtirjrprzsnYQg7KCA7J6l7ZWgIOqwneyytOuzgOyImAogICAgICBiSXNXYWl0OiBmYWxzZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIFdlYiBBUEnrpbwg7Ya17ZW07IScIOyCrOyaqeyekCDsubTrqZTrnbzsnZgg7KCR6re8KOyYgeyDgSBvbmx5KeydhCDsmpTssq3tlagKICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgdmlkZW86IHRydWUKICAgIH0pLnRoZW4ocFZpZGVvU3RyZWFtID0+IHsKICAgICAgLy8g7Lm066mU6528IOyYgeyDgSDsiqTtirjrprwg7KCV67O066W8IG9WaWRlb1N0cmVhbeyXkCDsoIDsnqXtlagKICAgICAgdGhpcy5vVmlkZW9TdHJlYW0gPSBwVmlkZW9TdHJlYW0KICAgICAgLy8g7Lm066mU6528IOyYgeyDgSDsiqTtirjrprwg7KCV67O066W8IHZpZGVvIOyXmOumrOuovO2KuOyXkCDtkZzsi5ztlagKICAgICAgdGhpcy4kcmVmcy5yVmlkZW8uc3JjT2JqZWN0ID0gcFZpZGVvU3RyZWFtCiAgICAgIHRoaXMuJHJlZnMuclZpZGVvLnBsYXkoKQogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICBjb25zb2xlLmxvZyhlcnIpCiAgICB9KQogIH0sCiAgZGVzdHJveWVkKCkgewogICAgLy8g7ZiE7J6sIO2ZlOuptOydhCDsooXro4ztlaAg6rK97JqwIO2YhOyerCDsnqzsg53rkJjripQg7JiB7IOBIO2KuOuemeydhCDssL7slYQg7KKF66OM7Iuc7YK0CiAgICBjb25zdCBvVHJhY2sgPSB0aGlzLm9WaWRlb1N0cmVhbS5nZXRUcmFja3MoKQogICAgb1RyYWNrLm1hcChwVHJhY2sgPT4gcFRyYWNrLnN0b3AoKSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZuQ2FtZXJhQ2FwdHVyZSgpIHsKICAgICAgdGhpcy5iSXNXYWl0ID0gdHJ1ZQogICAgICAvLyDtmITsnqwg7J6s7IOd65CY64qUIO2KuOuemeydhCDssL7slYQg7Iqk7Yu47J2066+47KeA66GcIOy6oeyymO2VqAogICAgICBjb25zdCBvVmlkZW9UcmFjayA9IHRoaXMub1ZpZGVvU3RyZWFtLmdldFZpZGVvVHJhY2tzKClbMF0KICAgICAgbGV0IG9DYXB0dXJlZEltYWdlID0gbmV3IHdpbmRvdy5JbWFnZUNhcHR1cmUob1ZpZGVvVHJhY2spCiAgICAgIGNvbnN0IG9wdGlvbnMgPSB7CiAgICAgICAgaW1hZ2VIZWlnaHQ6IDM1OSwKICAgICAgICBpbWFnZVdpZHRoOiA2NDAsCiAgICAgICAgZmlsbExpZ2h0TW9kZTogJ29mZicKICAgICAgfTsKICAgICAgY29uc3Qgc2VsZiA9IHRoaXMKICAgICAgLy8g7Lqh7LKY65CcIOydtOuvuOyngOulvCDtjIzsnbTslrTrsqDsnbTsiqQgRELsmYAg7Iqk7Yag66as7KeA7JeQIOyggOyepe2VqAogICAgICByZXR1cm4gb0NhcHR1cmVkSW1hZ2UudGFrZVBob3RvKG9wdGlvbnMpLnRoZW4ocEltYWdlRGF0YSA9PiB7CiAgICAgICAgLy8g7JiB7IOBIOygleyngAogICAgICAgIGNvbnN0IG9UcmFjayA9IHNlbGYub1ZpZGVvU3RyZWFtLmdldFRyYWNrcygpCiAgICAgICAgb1RyYWNrLm1hcChwVHJhY2sgPT4gcFRyYWNrLnN0b3AoKSkKICAgICAgICBjb25zb2xlLmxvZygn7Lqh7LKYOiAnICsgcEltYWdlRGF0YS50eXBlICsgJywgJyArIHBJbWFnZURhdGEuc2l6ZSArICfrsJTsnbTtirgnKTsKICAgICAgICAvLyDsoIDsnqXtlaAg7J2066+47KeAIO2MjOydvOydtOumhOycvOuhnCDsgqzsmqntlaAgSUQg7KSA67mECiAgICAgICAgY29uc3QgbklEID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpCiAgICAgICAgLy8g7YyM7J207Ja067Kg7J207IqkIOyKpO2GoOumrOyngOyXkCDsnbTrr7jsp4Ag7YyM7J28IOyggOyepQogICAgICAgIGxldCB1cGxvYWRUYXNrID0gb1N0b3JhZ2UucmVmKCdpbWFnZXMnKS5jaGlsZCgncGljJyArIG5JRCkucHV0KHBJbWFnZURhdGEpCiAgICAgICAgdXBsb2FkVGFzay5vbignc3RhdGVfY2hhbmdlZCcsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICAgICAgLy8gc3RhdGVfY2hhbmdlZCDsnbTrsqTtirjrpbwg7Ya17ZW07IScIOyWvOunjO2BvOydmCDrsJTsnbTtirjqsIAg7JeF66Gc65OcIOykkeyduOyngCDsvZjshpTsl5Ag7ZGc7IucCiAgICAgICAgICBsZXQgcHJvZ3Jlc3MgPSAoc25hcHNob3QuYnl0ZXNUcmFuc2ZlcnJlZCAvIHNuYXBzaG90LnRvdGFsQnl0ZXMpICogMTAwOwogICAgICAgICAgY29uc29sZS5sb2coJ+yXheuhnOuTnDogJyArIHByb2dyZXNzICsgJyUg7JmE66OMJywgc25hcHNob3Quc3RhdGUpOwogICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICAvLyDsmKTrpZgg67Cc7IOdIOyLnCDsvZjshpTsl5Ag7ZGc7IucCiAgICAgICAgfSwgZnVuY3Rpb24gKCkgewogICAgICAgICAgLy8g7ISx6rO17KCB7Jy866GcIOyXheuhnOuTnCDsmYTro4wg7ZuEIO2MjOydtOyWtOuyoOydtOyKpCBEQuyXkCDsoJXrs7Qg7KCA7J6lCiAgICAgICAgICB1cGxvYWRUYXNrLnNuYXBzaG90LnJlZi5nZXREb3dubG9hZFVSTCgpLnRoZW4oZnVuY3Rpb24gKGRvd25sb2FkVVJMKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfsl4XroZzrk5xVUkw6JywgZG93bmxvYWRVUkwpOwogICAgICAgICAgICBvUGljdHVyZXNpbkRCLnB1c2goewogICAgICAgICAgICAgICAgJ3VybCc6IGRvd25sb2FkVVJMLAogICAgICAgICAgICAgICAgJ3RpdGxlJzogJycsCiAgICAgICAgICAgICAgICAnaW5mbyc6ICcnLAogICAgICAgICAgICAgICAgJ2ZpbGVuYW1lJzogJ3BpYycgKyBuSUQKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIC50aGVuKHNlbGYuJHJvdXRlci5wdXNoKCcvJykpIC8vIOyggOyepSDtm4Qg7ZmIIO2ZlOuptOycvOuhnCDsnbTrj5kKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["camera_page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"camera_page.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col cols=\"12\" class=\"text-center\">\r\n        <!-- 카메라 영상 부분을 표시 -->\r\n        <video ref=\"rVideo\" class=\"style_video\"></video>\r\n      </v-col>\r\n      <v-col cols=\"12\" class=\"mt-5 text-center\">\r\n        <!-- 만약에 업로드된 이미지가 없으면 안내 문구 표시-->\r\n        <p>현재 iOS는 지원하지 않습니다.</p>\r\n      </v-col>\r\n    </v-row>\r\n    <div class=\"text-center my-3\">\r\n      <!-- 카메라 캡처 버튼을 영상 하단 중앙에 위치 -->\r\n      <v-btn v-if=\"!this.bIsWait\" color=\"red\" fab dark bottom @click=\"fnCameraCapture( )\">\r\n        <v-icon>camera</v-icon>\r\n      </v-btn>\r\n      <v-progress-circular v-if=\"this.bIsWait\" :size=\"50\" indeterminate color=\"grey\"></v-progress-circular>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  // 파이어베이스에서 DB와 스토리지 객체 가져옴\r\n  import {\r\n    oStorage,\r\n    oPicturesinDB\r\n  } from '@/datasources/firebase'\r\n  export default {\r\n    // 파이어베이스와 연결된 뷰파이어 oPictures 객체 준비\r\n    firebase: {\r\n      oPictures: oPicturesinDB\r\n    },\r\n    data() {\r\n      return {\r\n        oPictures: [], // 사진 데이터 저장 변수\r\n        oVideoStream: null, // 카메라 영상 스트림을 저장할 객체변수\r\n        bIsWait: false\r\n      }\r\n    },\r\n    mounted() {\r\n      // Web API를 통해서 사용자 카메라의 접근(영상 only)을 요청함\r\n      navigator.mediaDevices.getUserMedia({\r\n        video: true\r\n      }).then(pVideoStream => {\r\n        // 카메라 영상 스트림 정보를 oVideoStream에 저장함\r\n        this.oVideoStream = pVideoStream\r\n        // 카메라 영상 스트림 정보를 video 엘리먼트에 표시함\r\n        this.$refs.rVideo.srcObject = pVideoStream\r\n        this.$refs.rVideo.play()\r\n      }).catch(function (err) {\r\n        console.log(err)\r\n      })\r\n    },\r\n    destroyed() {\r\n      // 현재 화면을 종료할 경우 현재 재생되는 영상 트랙을 찾아 종료시킴\r\n      const oTrack = this.oVideoStream.getTracks()\r\n      oTrack.map(pTrack => pTrack.stop())\r\n    },\r\n    methods: {\r\n      fnCameraCapture() {\r\n        this.bIsWait = true\r\n        // 현재 재생되는 트랙을 찾아 스틸이미지로 캡처함\r\n        const oVideoTrack = this.oVideoStream.getVideoTracks()[0]\r\n        let oCapturedImage = new window.ImageCapture(oVideoTrack)\r\n        const options = {\r\n          imageHeight: 359,\r\n          imageWidth: 640,\r\n          fillLightMode: 'off'\r\n        };\r\n        const self = this\r\n        // 캡처된 이미지를 파이어베이스 DB와 스토리지에 저장함\r\n        return oCapturedImage.takePhoto(options).then(pImageData => {\r\n          // 영상 정지\r\n          const oTrack = self.oVideoStream.getTracks()\r\n          oTrack.map(pTrack => pTrack.stop())\r\n          console.log('캡처: ' + pImageData.type + ', ' + pImageData.size + '바이트');\r\n          // 저장할 이미지 파일이름으로 사용할 ID 준비\r\n          const nID = new Date().toISOString()\r\n          // 파이어베이스 스토리지에 이미지 파일 저장\r\n          let uploadTask = oStorage.ref('images').child('pic' + nID).put(pImageData)\r\n          uploadTask.on('state_changed', function (snapshot) {\r\n            // state_changed 이벤트를 통해서 얼만큼의 바이트가 업로드 중인지 콘솔에 표시\r\n            let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('업로드: ' + progress + '% 완료', snapshot.state);\r\n          }, function (error) {\r\n            console.log(error)\r\n            // 오류 발생 시 콘솔에 표시\r\n          }, function () {\r\n            // 성공적으로 업로드 완료 후 파이어베이스 DB에 정보 저장\r\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n              console.log('업로드URL:', downloadURL);\r\n              oPicturesinDB.push({\r\n                  'url': downloadURL,\r\n                  'title': '',\r\n                  'info': '',\r\n                  'filename': 'pic' + nID\r\n                })\r\n                .then(self.$router.push('/')) // 저장 후 홈 화면으로 이동\r\n            });\r\n          });\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  /* 카메라 영상의 너비값을 브라우저 너비에 맞춤 */\r\n  .style_video {\r\n    width: 100%\r\n  }\r\n</style>"]}]}